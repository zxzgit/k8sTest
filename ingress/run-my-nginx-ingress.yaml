# 部署两个nginx
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-nginx-deployment
spec:
  selector:
    matchLabels:
      app: my-nginx-container # 对应 spec.template.metadata.labels
  replicas: 2
  template:
    metadata:
      labels:
        app: my-nginx-container # 打这个label给 deployment 和 service 的 spec.selector 选择
    spec:
      containers:
        - name: my-nginx
          image: nginx
          ports:
            - containerPort: 80

---

# 暴露服务,服务 labels 为 app:my-nginx 的 pod
apiVersion: v1
kind: Service
metadata:
  name: my-nginx-service
spec:
  type: NodePort
  selector:
    # 选择服务的pod
    app: my-nginx-container # 对应 kind: Deployment 中 spec.template.metadata.labels
  ports:
    - name: http
      port: 80 # service 端口
      targetPort: 80 # 容器端口
      protocol: TCP

---

# 创建一个 Ingress 资源. 注意： v1.18 之前版本，之后 spec.rules.http.paths.[].backend 的配置有变
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: my-nginx-minimal-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              # serviceName 对应 kind: Service 中 metadata.name
              serviceName: my-nginx-service
              servicePort: 80

